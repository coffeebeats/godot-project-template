name: "ðŸ“‹ Check: Godot project"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: write

defaults:
  run:
    shell: bash

env:
  # NOTE: Switch to repository secret to have new commit run workflows.
  ACTIONS_BOT_TOKEN: ${{ secrets.ACTIONS_BOT_TOKEN }}

jobs:
  changes:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    outputs:
      has_change: "${{ steps.check-non-source.outputs.any_modified == 'true' || steps.check-source.outputs.any_modified == 'true' }}"
      has_source_change: "${{ steps.check-source.outputs.any_modified == 'true' }}"
      has_pot_change: "${{ steps.check-pot.outputs.any_modified == 'true' }}"
      has_po_change: "${{ steps.check-po.outputs.any_modified == 'true' }}"
      added-png-files: "${{ steps.check-png.outputs.added_files }}"
      modified-png-files: "${{ steps.check-png.outputs.modified_files }}"
      modified-pot-files: "${{ steps.check-pot.outputs.modified_files }}"
      modified-po-files: "${{ steps.check-po.outputs.modified_files }}"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for any non-source code changes
        id: check-non-source
        uses: tj-actions/changed-files@v45
        with:
          files_ignore: "**/*.gd"

      - name: Check for any source code changes
        id: check-source
        uses: tj-actions/changed-files@v45
        with:
          files: "**/*.gd"

      - name: Check for PNG image file changes
        id: check-png
        uses: tj-actions/changed-files@v45
        with:
          files: "**/*.png"

      - name: Check for template translation file changes
        id: check-pot
        uses: tj-actions/changed-files@v45
        with:
          files: |
            project/locale/messages.pot
            project/locale/en_US.po

      - name: Check for non-template translation file changes
        id: check-po
        uses: tj-actions/changed-files@v45
        with:
          files: "project/locale/*.po"
          files_ignore: |
            project/locale/messages.pot
            project/locale/en_US.po

  format-and-lint:
    needs: ["changes"]
    if: |
      needs.changes.outputs.has_source_change == 'true' &&
      github.actor != 'dependabot[bot]'

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4
        with:
          # Checkout the "head_ref" (i.e. PR branch HEAD) in case a commit is
          # later needed. See https://github.com/stefanzweifel/git-auto-commit-action
          # for more details.
          ref: ${{ github.head_ref }}
          token: ${{ env.ACTIONS_BOT_TOKEN }}

      - uses: "coffeebeats/godot-infra/check-godot-project@v1"
        with:
          ignore-lint-errors: false
          line-length-max: 88

  optimize-png:
    needs:
      - "changes"
      - "format-and-lint" # NOTE: Run serially to avoid racing commits.
    if:
      (needs.changes.outputs.added-png-files != '' || needs.changes.outputs.modified-png-files != '') &&
      github.actor != 'dependabot[bot]'

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      # NOTE: No need for submodules since we don't need to optimize them.
      - uses: actions/checkout@v4
        with:
          # Checkout the "head_ref" (i.e. PR branch HEAD) in case a commit is
          # later needed. See https://github.com/stefanzweifel/git-auto-commit-action
          # for more details.
          ref: ${{ github.head_ref }}

      - uses: "coffeebeats/godot-infra/.github/actions/parse-godot-version@v1"
        id: version
        with:
          gdenv-pin-path: .godot-version

      - uses: "coffeebeats/godot-infra/.github/actions/setup-godot@v1"
        with:
          version: ${{ steps.version.outputs.semantic }}

      - name: Install 'pngcrush' tool
        run: sudo apt-get install -y pngcrush

      - name: Optimize images
        run: |
          files="$(echo "${{ needs.changes.outputs.added-png-files }} ${{ needs.changes.outputs.modified-png-files }}" | xargs)"

          for f in $files; do
            echo "$(du -sh $f) (before)"
            pngcrush "$f" "$f.opt"
            mv "$f.opt" "$f"
            echo "$(du -sh $f) (after)"
          done

      - name: Import optimized images
        run: godot --verbose --headless --quit --import

      - uses: "coffeebeats/godot-infra/commit-changes@v1"
        with:
          description: "optimizing PNG images"

  check-translations:
    needs:
      - "changes"
    if: |
      github.actor != 'dependabot[bot]' &&
      (needs.changes.outputs.has_pot_change == 'true' || needs.changes.outputs.has_po_change == 'true') ||
      (github.event_name == 'pull_request' && contains( github.event.pull_request.labels.*.name, 'autorelease: pending'))

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4

      - name: Install 'gettext' tools
        run: |
          # sudo apt-get install -y gettext

          for tool in msgfmt; do
            if ! command -v $tool >/dev/null; then
              echo "Failed to install '$tool'; exiting."
              exit 1
            fi
          done

      # NOTE: While we could just check the changed ones, because this will also
      # be run on release branches, it's better to just check all of them.
      - name: Validate translation files
        run: |
          for f in $(ls project/locale); do
            msgfmt "project/locale/$f" --check
          done

      - name: Check for fuzzy translations before release
        if: |
          github.event_name == 'pull_request' &&
          contains( github.event.pull_request.labels.*.name, 'autorelease: pending')
        run: |
          for f in $(ls --hide "*.pot" project/locale); do
            if grep '#,' "project/locale/$f" >/dev/null; then
              echo "Found fuzzy translation in file: $f"
              exit 1
            fi
          done

  update-translations:
    needs:
      - "changes"
      - "check-translations"
      - "optimize-png" # NOTE: Run serially to avoid racing commits.
    if: |
      needs.changes.outputs.has_po_change == 'true' &&
      github.actor != 'dependabot[bot]'

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      # NOTE: No need for submodules since we don't need to optimize them.
      - uses: actions/checkout@v4
        with:
          # Checkout the "head_ref" (i.e. PR branch HEAD) in case a commit is
          # later needed. See https://github.com/stefanzweifel/git-auto-commit-action
          # for more details.
          ref: ${{ github.head_ref }}

      - name: Install 'gettext' tools
        run: |
          # sudo apt-get install -y gettext

          for tool in msgmerge msgfmt; do
            if ! command -v $tool >/dev/null; then
              echo "Failed to install '$tool'; exiting."
              exit 1
            fi
          done

      - name: Install 'translate-toolkit' tools
        run: |
          python3 -m pip install translate-toolkit

          if ! command -v poswap >/dev/null; then
            echo "Failed to install 'poswap'; exiting."
            exit 1
          fi

      # Non-english 'po' files use the intermediate English translations as
      # their source language. Ensure these are updated if any of the files
      # have changed.
      - name: Update modified 'po' files
        run: |
          files="$(echo "${{ needs.changes.outputs.modified-po-files }}" | xargs)"

          for f in $files; do
            if [[ "$(basename "$f")" == "en_US.po" ]]; then
              continue
            fi

            poswap en_US.po -t $f "$f.tmp"
            msgmerge --update --backup=none $f "$f.tmp"
            rm "$f.tmp"
          done

      - uses: "coffeebeats/godot-infra/commit-changes@v1"
        with:
          description: "updating translation files"

  test:
    needs: ["changes"]
    if: needs.changes.outputs.has_change == 'true'

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: "coffeebeats/godot-infra/.github/actions/parse-godot-version@v1"
        id: version
        with:
          gdenv-pin-path: .godot-version

      - uses: "coffeebeats/godot-infra/.github/actions/setup-godot@v1"
        with:
          version: ${{ steps.version.outputs.semantic }}

      - name: Initialize project imports
        run: godot --verbose --headless --quit --import

      - name: Test source code
        run: >-
          godot
          --verbose
          --headless
          -s addons/gut/gut_cmdln.gd
          -gdir=res://
          -ginclude_subdirs
          -gprefix=
          -gsuffix=_test.gd
          -gexit

  # Used to ensure all branch protection requirements are met. This is a workaround until
  # https://github.com/github-community/community/discussions/4324 is addressed.
  branch_protection:
    needs:
      - "format-and-lint"
      - "optimize-png"
      - "check-translations"
      - "update-translations"
      - "test"
    if: ${{ always() }}

    runs-on: ubuntu-latest
    timeout-minutes: 1

    steps:
      - name: Verify 'format-and-lint' status
        if: |
          always() &&
          needs.format-and-lint.result == 'failure' ||
          needs.format-and-lint.result == 'cancelled'
        run: exit 1

      - name: Verify 'optimize-png' status
        if: |
          always() &&
          needs.optimize-png.result == 'failure' ||
          needs.optimize-png.result == 'cancelled'
        run: exit 1

      - name: Verify 'check-translations' status
        if: |
          always() &&
          needs.check-translations.result == 'failure' ||
          needs.check-translations.result == 'cancelled'
        run: exit 1

      - name: Verify 'update-translations' status
        if: |
          always() &&
          needs.update-translations.result == 'failure' ||
          needs.update-translations.result == 'cancelled'
        run: exit 1

      - name: Verify 'test' status
        if: |
          always() &&
          needs.test.result == 'failure' ||
          needs.test.result == 'cancelled'
        run: exit 1
