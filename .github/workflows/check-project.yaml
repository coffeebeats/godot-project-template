name: "ðŸ“‹ Check: Godot project"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: write

defaults:
  run:
    shell: bash

env:
  # NOTE: Switch to repository secret to have new commit run workflows.
  ACTIONS_BOT_TOKEN: ${{ secrets.ACTIONS_BOT_TOKEN }}

jobs:
  changes:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    outputs:
      has_change: "${{ steps.check-non-source.outputs.any_modified == 'true' || steps.check-source.outputs.any_modified == 'true' }}"
      has_source_change: "${{ steps.check-source.outputs.any_modified == 'true' }}"
      added-png-files: "${{ steps.check-png.outputs.added_files }}"
      modified-png-files: "${{ steps.check-png.outputs.modified_files }}"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for any non-source code changes
        id: check-non-source
        uses: tj-actions/changed-files@v45
        with:
          files_ignore: "**/*.gd"

      - name: Check for any source code changes
        id: check-source
        uses: tj-actions/changed-files@v45
        with:
          files: "**/*.gd"

      - name: Check for PNG image file changes
        id: check-png
        uses: tj-actions/changed-files@v45
        with:
          files: "**/*.png"

  format-and-lint:
    needs: ["changes"]
    if: |
      needs.changes.outputs.has_source_change == 'true' &&
      github.actor != 'dependabot[bot]'

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4
        with:
          # Checkout the "head_ref" (i.e. PR branch HEAD) in case a commit is
          # later needed. See https://github.com/stefanzweifel/git-auto-commit-action
          # for more details.
          ref: ${{ github.head_ref }}
          token: ${{ env.ACTIONS_BOT_TOKEN }}

      - uses: "coffeebeats/godot-infra/check-godot-project@v0"
        with:
          ignore-lint-errors: false
          line-length-max: 88

  optimize-png:
    needs:
      - "changes"
      - "format-and-lint" # NOTE: Run serially to avoid racing commits.
    if:
      (needs.changes.outputs.added-png-files != '' || needs.changes.outputs.modified-png-files != '') &&
      github.actor != 'dependabot[bot]'

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      # NOTE: No need for submodules since we don't need to optimize them.
      - uses: actions/checkout@v4
        with:
          # Checkout the "head_ref" (i.e. PR branch HEAD) in case a commit is
          # later needed. See https://github.com/stefanzweifel/git-auto-commit-action
          # for more details.
          ref: ${{ github.head_ref }}

      - uses: "coffeebeats/godot-infra/.github/actions/parse-godot-version@v0"
        id: version
        with:
          gdenv-pin-path: .godot-version

      - uses: "coffeebeats/godot-infra/.github/actions/setup-godot@v0"
        with:
          version: ${{ steps.version.outputs.semantic }}

      - name: Install 'pngcrush' tool
        run: apt-get install -y pngcrush

      - name: Optimize images
        run: |
          for f in "${{ needs.changes.outputs.added-png-files }} ${{ needs.changes.outputs.modified-png-files }}"; do
            echo "$(du -sh $f) (before)"
            pngcrush "$f" "$f.opt"
            mv "$f.opt" "$f"
            echo "$(du -sh $f) (after)"
          done

      - name: Import optimized images
        run: godot --verbose --headless --quit --import

      - uses: "coffeebeats/godot-infra/commit-changes@v0"
        with:
          description: "optimizing PNG images"

  test:
    needs: ["changes"]
    if: needs.changes.outputs.has_change == 'true'

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: "coffeebeats/godot-infra/.github/actions/parse-godot-version@v0"
        id: version
        with:
          gdenv-pin-path: .godot-version

      - uses: "coffeebeats/godot-infra/.github/actions/setup-godot@v0"
        with:
          version: ${{ steps.version.outputs.semantic }}

      - name: Initialize project imports
        run: godot --verbose --headless --quit --import

      - name: Test source code
        run: >-
          godot
          --verbose
          --headless
          --quit
          -s addons/gut/gut_cmdln.gd
          -gdir=res://
          -ginclude_subdirs
          -gprefix=
          -gsuffix=_test.gd
          -gexit

  # Used to ensure all branch protection requirements are met. This is a workaround until
  # https://github.com/github-community/community/discussions/4324 is addressed.
  branch_protection:
    needs: ["format-and-lint", "optimize-png", "test"]
    if: ${{ always() }}

    runs-on: ubuntu-latest
    timeout-minutes: 1

    steps:
      - name: Verify 'format-and-lint' status
        if: |
          always() &&
          needs.format-and-lint.result == 'failure' ||
          needs.format-and-lint.result == 'cancelled'
        run: exit 1

      - name: Verify 'optimize-png' status
        if: |
          always() &&
          needs.optimize-png.result == 'failure' ||
          needs.optimize-png.result == 'cancelled'
        run: exit 1

      - name: Verify 'test' status
        if: |
          always() &&
          needs.test.result == 'failure' ||
          needs.test.result == 'cancelled'
        run: exit 1
